# Generated by Django 3.2.6 on 2021-08-27 12:48

import apps.orders.workflows
from django.db import migrations, models
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CareerEducation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('education', models.CharField(choices=[('acad_degree', 'Ученая степень'), ('sev_degrees', 'Несколько высших образований'), ('high_edu', 'Высшее образование'), ('high_inc_edu', 'Высшее незаконченное'), ('spec_secondary', 'Среднее специальное'), ('secondary', 'Среднее образование'), ('inc_higher', 'Неоконченное высшее')], max_length=14, verbose_name='Образование')),
                ('workplace_category', models.CharField(choices=[('OWN_BUSINESS', 'Владеет собственным бизнесом'), ('UNEMPLOYED', 'Безработный'), ('PART_TIME', 'Неполный рабочий день, совместительство, работа по найму'), ('FULL_TIME', 'Полный рабочий день')], max_length=12, verbose_name='Тип трудоустройства')),
                ('is_student', models.BooleanField(default=False)),
                ('worker_status', models.CharField(choices=[('full', 'Полный рабочий день'), ('part', 'Неполный рабочий день'), ('own', 'Собственный бизнес'), ('part_own', 'Совладелец бизнеса'), ('free_lan', 'Самозанятый'), ('intern', 'Стажировка')], max_length=8, null=True, verbose_name='Тип занятости')),
                ('retiree_status', models.CharField(choices=[('common', 'Пенсионер (без льгот)'), ('beni', 'Льготный пенсионер')], max_length=6, null=True, verbose_name='Социальный статус пенсионера')),
                ('monthly_income', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Среднемесячный доход')),
                ('monthly_expenses', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Среднемесячные расходы')),
                ('org_name', models.CharField(max_length=200, null=True, verbose_name='Название организации')),
                ('position', models.CharField(max_length=200, null=True, verbose_name='Должность')),
                ('months_of_exp', models.PositiveSmallIntegerField(null=True, verbose_name='Стаж работы в месяцах')),
                ('job_phone', models.CharField(max_length=12, null=True, verbose_name='Рабочий телефон')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='Телефон')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
        ),
        migrations.CreateModel(
            name='ClientOrder',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='Телефон')),
            ],
            options={
                'verbose_name': 'Клиент в заказе',
                'verbose_name_plural': 'Клиенты в заказах',
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('changed_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('status', models.CharField(choices=[('outlet', 'На точке'), ('sent', 'Отправлены'), ('office', 'В офисе'), ('cdek', 'В СДЭК'), ('bank', 'В банке')], default='outlet', max_length=6, verbose_name='Статус')),
                ('bank_number', models.CharField(max_length=200, null=True, verbose_name='Номер договора')),
                ('bank_authorization_code', models.CharField(max_length=200, null=True, verbose_name='Код авторизации в банке')),
                ('bank_credit_amount', models.DecimalField(decimal_places=2, max_digits=10, null=True, verbose_name='Сумма кредита в банке')),
                ('bank_goods_price', models.DecimalField(decimal_places=2, max_digits=10, null=True, verbose_name='Цена товаров в банке')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Credit',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('initial_payment', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Первоначальный взнос')),
                ('term', models.IntegerField(verbose_name='Срок')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DocumentSigned',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to='orders/documents_signed', verbose_name='Файл')),
                ('file_ext', models.CharField(max_length=10, null=True, verbose_name='Расширение')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DocumentToSign',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to='orders/documents_to_sign', verbose_name='Файл')),
                ('file_name', models.CharField(default='unknown', max_length=200, verbose_name='Название файла')),
                ('file_type', models.CharField(default='unknown', max_length=100, verbose_name='Логический тип файла')),
                ('file_ext', models.CharField(max_length=10, null=True, verbose_name='Расширение')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExtraData',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('notification_way', models.CharField(choices=[('HABITATION', 'Адрес проживания'), ('REGISTRATION', 'Адрес прописки')], default='REGISTRATION', max_length=12, verbose_name='Адрес доставки корреспонденции')),
                ('previous_passport_series', models.CharField(max_length=4, null=True, verbose_name='Серия предыдущего паспорта')),
                ('previous_passport_number', models.CharField(max_length=6, null=True, verbose_name='Номер предыдущего паспорта')),
                ('previous_first_name', models.CharField(max_length=100, null=True, verbose_name='Предыдущее имя')),
                ('previous_last_name', models.CharField(max_length=100, null=True, verbose_name='Предыдущая фамилия')),
                ('previous_middle_name', models.CharField(max_length=100, null=True, verbose_name='Предыдущее отчество')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FamilyData',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('marital_status', models.CharField(choices=[('single', 'Не состоял(а) в браке'), ('married', 'Состоит в браке'), ('civil', 'Гражданский брак'), ('divorced', 'Разведен(а)'), ('widowed', 'Вдовец/вдова')], max_length=8, verbose_name='Семейное положение')),
                ('marriage_date', models.DateField(null=True, verbose_name='Дата вступления в брак')),
                ('children_count', models.PositiveSmallIntegerField(default=0, null=True, verbose_name='Количество детей')),
                ('dependents_count', models.PositiveSmallIntegerField(default=0, null=True, verbose_name='Количество иждивенцев')),
                ('partner_first_name', models.CharField(max_length=100, null=True, verbose_name='Имя супруг(а/и)')),
                ('partner_last_name', models.CharField(max_length=100, null=True, verbose_name='Фамилия супруг(а/и)')),
                ('partner_middle_name', models.CharField(max_length=100, null=True, verbose_name='Отчество супруг(а/и)')),
                ('partner_is_student', models.BooleanField(default=False, null=True)),
                ('partner_worker_status', models.CharField(choices=[('full', 'Полный рабочий день'), ('part', 'Неполный рабочий день'), ('own', 'Собственный бизнес'), ('part_own', 'Совладелец бизнеса'), ('free_lan', 'Самозанятый'), ('intern', 'Стажировка')], max_length=8, null=True, verbose_name='Тип занятости')),
                ('partner_retiree_status', models.CharField(choices=[('common', 'Пенсионер (без льгот)'), ('beni', 'Льготный пенсионер')], max_length=6, null=True, verbose_name='Социальный статус пенсионера')),
                ('monthly_family_income', models.DecimalField(decimal_places=2, max_digits=10, null=True, verbose_name='Среднемесячный доход семьи')),
                ('code_word', models.CharField(max_length=200, verbose_name='Кодовое слово')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Good',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('brand', models.CharField(max_length=100, verbose_name='Бред/Марка')),
                ('model', models.CharField(max_length=200, verbose_name='Модель товара')),
                ('name', models.CharField(max_length=200, verbose_name='Наименование товара')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('new', 'Новый'), ('telegram', 'Из телеграмма'), ('scoring', 'Скоринг'), ('rejected', 'Отказ всех банков'), ('selection', 'Выбор кредитного продукта'), ('agreement', 'Заключение соглашения'), ('agreement-error', 'Ошибка в заключении соглашения'), ('documents-creation', 'Формирование документов'), ('documents-signing', 'Ожидание подписи документов клиентом'), ('documents-sending', 'Отправка подписанных документов в банк'), ('documents-error', 'Ошибка при обработке документов банком'), ('authorization', 'На авторизации'), ('authorized', 'Авторизован'), ('unauthorized', 'Не авторизован'), ('client-refused', 'Отказ клиента')], default='new', max_length=18, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время создания')),
                ('changed_at', models.DateTimeField(auto_now=True, verbose_name='Дата и время изменения')),
                ('purchase_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Сумма покупки')),
                ('agent_commission_sum', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Комиссия агента')),
                ('reject_reason', models.CharField(choices=[('NO_EXPLANATION', 'Без объяснений'), ('INTEREST_RATE_TOO_HIGH', 'Высокая процентная ставка'), ('INSUFFICIENT_LIMIT', 'Недостаточный лимит по кредиту'), ('LENGTHY_SCORING', 'Долгий процесс получения кредита'), ('OTHER', 'Прочее'), ('POOR_SERVICE', 'Не устраивает качество обслуживания'), ('OTHER_BANK', 'Ушел в другой банк'), ('AUTH_DID_NOT_COMPLETE', 'Время для авторизации истекло'), ('PAYMENT_TOO_HIGH', 'Высокий ежемесячный платеж'), ('EARLY_REPAYMENT_COMMISSION_TOO_HIGH', 'Высок. комис. при досроч. погашении'), ('LOAN_COMMISSION_TOO_HIGH', 'Высокие комиссии по кредиту'), ('LOAN_NO_MORE_NEEDED', 'Отпала необходимость в кредите'), ('TECH_FAILURE', 'Технический сбой'), ('BANK_REJECTION', 'Отказ Банка')], default='NO_EXPLANATION', max_length=35, verbose_name='Причина отказа от кредита')),
            ],
            options={
                'abstract': False,
            },
            bases=(apps.orders.workflows.OrderStatusFSM, models.Model),
        ),
        migrations.CreateModel(
            name='OrderCreditProduct',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('not-sent', 'Ещё не отправлено'), ('in-process', 'В процессе скоринга'), ('client-refused', 'Клиент отказался'), ('rejected', 'Отказ банка'), ('success', 'Одобрено банком'), ('short_approved', 'Короткая заявка одобрена, требуется отправка полной'), ('goods_info_req', 'Требуется информация по товарам'), ('manual_validation_required', 'Требуется ручная проверка'), ('tech_error', 'Техническая ошибка, возможна повторная отправка')], default='not-sent', max_length=26, verbose_name='Статус согласования кредита')),
                ('agent_commission', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Комиссия агента')),
                ('priority', models.PositiveSmallIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=1, verbose_name='Приоритет банка')),
                ('bank_id', models.CharField(max_length=200, null=True, verbose_name='ID заказа в банке')),
                ('bank_data', models.CharField(max_length=1000, null=True, verbose_name='Ответ банка')),
                ('explanation', models.CharField(max_length=1000, null=True, verbose_name='Пояснение к ответу банка')),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderExtraService',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('agent_commission', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Комиссия агента')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderGood',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('amount', models.PositiveIntegerField(default=1)),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Цена')),
                ('serial_number', models.CharField(max_length=150, null=True, verbose_name='Серийный номер')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderGoodService',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderHistory',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('order_status', models.CharField(choices=[('new', 'Новый'), ('telegram', 'Из телеграмма'), ('scoring', 'Скоринг'), ('rejected', 'Отказ всех банков'), ('selection', 'Выбор кредитного продукта'), ('agreement', 'Заключение соглашения'), ('agreement-error', 'Ошибка в заключении соглашения'), ('documents-creation', 'Формирование документов'), ('documents-signing', 'Ожидание подписи документов клиентом'), ('documents-sending', 'Отправка подписанных документов в банк'), ('documents-error', 'Ошибка при обработке документов банком'), ('authorization', 'На авторизации'), ('authorized', 'Авторизован'), ('unauthorized', 'Не авторизован'), ('client-refused', 'Отказ клиента')], default='new', max_length=18, verbose_name='Статус заявки')),
                ('credit_product_status', models.CharField(choices=[('not-sent', 'Ещё не отправлено'), ('in-process', 'В процессе скоринга'), ('client-refused', 'Клиент отказался'), ('rejected', 'Отказ банка'), ('success', 'Одобрено банком'), ('short_approved', 'Короткая заявка одобрена, требуется отправка полной'), ('goods_info_req', 'Требуется информация по товарам'), ('manual_validation_required', 'Требуется ручная проверка'), ('tech_error', 'Техническая ошибка, возможна повторная отправка')], max_length=26, null=True, verbose_name='Статус кредитного продукта')),
                ('description', models.TextField(default='', null=True, verbose_name='Подробности')),
                ('changed_at', models.DateTimeField(auto_now_add=True, verbose_name='Изменен в')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderTempToken',
            fields=[
                ('key', models.CharField(blank=True, max_length=256, primary_key=True, serialize=False, verbose_name='Токен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Момент создания')),
                ('moment_end', models.DateTimeField(blank=True, verbose_name='Момент завершения')),
                ('type', models.CharField(choices=[('passport', '/upload-passport-data/{key}/'), ('document', '/check-document-status/{key}/')], max_length=8, verbose_name='Тип временного токена')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Passport',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=200, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=200, verbose_name='Фамилия')),
                ('middle_name', models.CharField(max_length=200, null=True, verbose_name='Отчество')),
                ('birth_date', models.DateField(verbose_name='Дата рождения')),
                ('number', models.CharField(max_length=6, verbose_name='Номер')),
                ('series', models.CharField(max_length=4, verbose_name='Серия')),
                ('receipt_date', models.DateField()),
                ('division_code', models.CharField(max_length=7, verbose_name='Код подразделения')),
                ('issued_by', models.CharField(max_length=100, verbose_name='Кем выдан')),
                ('sex', models.CharField(choices=[('male', 'Мужчина'), ('female', 'Мужчина')], max_length=6, verbose_name='Пол')),
                ('passport_main_photo', models.ImageField(null=True, upload_to='orders/passports')),
                ('passport_registry_photo', models.ImageField(null=True, upload_to='orders/passports')),
                ('previous_passport_photo', models.ImageField(null=True, upload_to='orders/passports')),
                ('client_photo', models.ImageField(null=True, upload_to='orders/photos')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonalData',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('registry_date', models.DateField(verbose_name='Дата регистрации по месту регистрации')),
                ('habitation_realty_type', models.CharField(choices=[('commercial', 'Коммерческая'), ('public', 'Публичная'), ('private', 'Частная')], max_length=10, null=True, verbose_name='Тип недвижимости по адресу проживания')),
                ('realty_period_months', models.PositiveSmallIntegerField(verbose_name='Длительность проживания. Месяцев')),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='Email')),
                ('birth_place', models.CharField(max_length=200, verbose_name='Место рождения')),
                ('birth_country', models.CharField(choices=[('RU', 'Россия'), ('JP', 'Япония'), ('ET', 'Эфиопия'), ('EE', 'Эстония'), ('ER', 'Эритрея'), ('EC', 'Эквадор'), ('LK', 'Шри-Ланка'), ('SE', 'Швеция'), ('CH', 'Швейцария'), ('CZ', 'Чехия'), ('TD', 'Чад'), ('HR', 'Хорватия'), ('FR', 'Франция'), ('FI', 'Финляндия'), ('PH', 'Филиппины'), ('UA', 'Украина'), ('UZ', 'Узбекистан'), ('UG', 'Уганда'), ('TR', 'Турция'), ('TM', 'Туркменистан'), ('TN', 'Тунис'), ('TZ', 'Танзания'), ('TH', 'Тайланд'), ('TJ', 'Таджикистан'), ('TW', 'Тайвань'), ('SL', 'Сьерра-Леоне'), ('SD', 'Судан'), ('SO', 'Сомали'), ('SI', 'Словения'), ('SK', 'Словакия'), ('SY', 'Сирия'), ('SG', 'Сингапур'), ('CS', 'Сербия и Черногория'), ('RS', 'Сербия'), ('KN', 'Сент - Китс и Невис'), ('SN', 'Сенегал'), ('SC', 'Сейшелы'), ('US', 'США'), ('RO', 'Румыния'), ('RW', 'Руанда'), ('PT', 'Португалия'), ('PL', 'Польша'), ('PE', 'Перу'), ('PY', 'Парагвай'), ('PA', 'Панама'), ('PS', 'Палестинская Территория'), ('PK', 'Пакистан'), ('IM', 'Остров Мэн'), ('OM', 'Оман'), ('AE', 'Объединенные Арабские Эмираты'), ('NO', 'Норвегия'), ('NZ', 'Новая Зеландия'), ('NG', 'Нигерия'), ('NP', 'Непал'), ('NR', 'Науру'), ('MM', 'Мьянма'), ('MN', 'Монголия'), ('MD', 'Молдавия'), ('MZ', 'Мозамбик'), ('MX', 'Мексика'), ('MA', 'Марокко'), ('ML', 'Мали'), ('MY', 'Малазия'), ('KW', 'Кувейт'), ('MK', 'Македония'), ('CU', 'Куба'), ('MG', 'Мадагаскар'), ('CI', 'Кот Дивуар'), ('MR', 'Мавритания'), ('KR', 'Корея (Республика)'), ('MU', 'Маврикий'), ('KP', 'Корея (КНДР)'), ('LU', 'Люксембург'), ('CD', 'Конго, Демократическая Республика'), ('LI', 'Лихтенштейн'), ('CG', 'Конго'), ('LT', 'Литва'), ('KM', 'Коморские острова'), ('LB', 'Ливан'), ('CO', 'Колумбия'), ('LR', 'Либерия'), ('CN', 'Китай'), ('LV', 'Латвия'), ('KG', 'Киргизстан'), ('CY', 'Кипр'), ('KE', 'Кения'), ('CA', 'Канада'), ('CM', 'Камерун'), ('KZ', 'Казахстан'), ('YE', 'Йемен'), ('IT', 'Италия'), ('ES', 'Испания'), ('IS', 'Исландия'), ('IE', 'Ирландия'), ('IR', 'Иран'), ('IQ', 'Ирак'), ('JO', 'Иордания'), ('ID', 'Индонезия'), ('IN', 'Индия'), ('IL', 'Израиль'), ('ZW', 'Зимбабве'), ('WS', 'Западное Самоа'), ('ZM', 'Замбия'), ('EG', 'Египет'), ('DO', 'Доминиканская Республика'), ('DK', 'Дания'), ('GE', 'Грузия'), ('GR', 'Греция'), ('HK', 'Гонконг'), ('NL', 'Голландия'), ('GI', 'Гибралтар'), ('DE', 'Германия'), ('GW', 'Гвинея-Бисау'), ('GN', 'Гвинея'), ('GT', 'Гватемала'), ('GH', 'Гана'), ('GY', 'Гайана'), ('HT', 'Гаити'), ('VN', 'Вьетнам'), ('LA', 'Вьентьян'), ('VI', 'Виргинские острова (США)'), ('VG', 'Виргинские острова (Британия)'), ('VE', 'Венесуэла'), ('HU', 'Венгрия'), ('GB', 'Великобритания'), ('VU', 'Вануату'), ('BI', 'Бурунди'), ('IO', 'Британские территории в Индийском океане'), ('BR', 'Бразилия'), ('BA', 'Босния и Герцеговина'), ('BO', 'Боливия'), ('BG', 'Болгария'), ('BM', 'Бермудские острова'), ('BJ', 'Бенин'), ('BE', 'Бельгия'), ('BY', 'Белоруссия'), ('BZ', 'Белиз'), ('BH', 'Бахрейн'), ('BD', 'Бангладеш'), ('BS', 'Багамы'), ('AF', 'Афганистан'), ('AM', 'Армения'), ('AR', 'Аргентина'), ('AG', 'Антигуа и Барбуда'), ('AD', 'Андорра'), ('AO', 'Ангола'), ('DZ', 'Алжир'), ('AL', 'Албания'), ('AZ', 'Азербайджан'), ('AT', 'Австрия'), ('AU', 'Австралия'), ('ZA', 'Южно-Африканская Республика'), ('SA', 'Саудовская Аравия'), ('SR', 'Суринам'), ('TG', 'Того')], max_length=100, verbose_name='Страна рождения')),
                ('life_insurance_code', models.PositiveSmallIntegerField(choices=[(1, '2-8S7UY86 ОСАО "РЕСО-Гарантия"'), (2, '2-1HURJZF ООО "Альфа-Страхование-Жизнь"'), (3, '2-OMYWQB ООО "Альфа-Страхование-Жизнь"'), (4, '2-A62U0TR ООО "АЛЬФАСТРАХОВАНИЕ-ЖИЗНЬ"')], null=True)),
                ('work_loss_insurance_code', models.PositiveSmallIntegerField(choices=[('2-927ER1Q ОАО "АльфаСтрахование"', '2-927ER1Q ОАО "АльфаСтрахование"'), ('2-927EQYN ОАО "АльфаСтрахование"', '2-927EQYN ОАО "АльфаСтрахование"'), ('2-5E9TTXC ОАО "Военно-страховая компания"', '2-5E9TTXC ОАО "Военно-страховая компания"'), ('2-A62U1CG ОАО "АльфаСтрахование"', '2-A62U1CG ОАО "АльфаСтрахование"')], null=True)),
                ('contact_first_name', models.CharField(max_length=100, verbose_name='Имя контакта')),
                ('contact_last_name', models.CharField(max_length=100, verbose_name='Фамилия контакта')),
                ('contact_middle_name', models.CharField(max_length=100, null=True, verbose_name='Отчество контакта')),
                ('contact_phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='Номер телефона контакта')),
                ('contact_relation', models.CharField(choices=[('BROTHER', 'Брат'), ('DAUGHTER', 'Дочь'), ('FATHER', 'Отец'), ('FRIEND', 'Друг / подруга'), ('MOTHER', 'Мать'), ('SISTER', 'Сестра'), ('SON', 'Сын'), ('OTHER', 'Другое'), ('RELATIVE', 'Иной родственник')], max_length=8, verbose_name='Отношение к заемщику')),
                ('usa_citizenship', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonalDataFile',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('page', models.PositiveIntegerField(default=1, verbose_name='Страница')),
                ('image', models.ImageField(upload_to='', verbose_name='Скан страницы')),
                ('is_recognized', models.BooleanField(default=False, verbose_name='Распознано')),
            ],
            options={
                'verbose_name': 'Скан паспорта',
                'verbose_name_plural': 'Сканы паспорта',
            },
        ),
        migrations.CreateModel(
            name='PersonalDataTempToken',
            fields=[
                ('key', models.CharField(blank=True, max_length=256, primary_key=True, serialize=False, verbose_name='Токен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Момент создания')),
                ('moment_end', models.DateTimeField(blank=True, verbose_name='Момент завершения')),
            ],
            options={
                'verbose_name': 'Временный токен для загрузки сканов паспорта',
                'verbose_name_plural': 'Временные токены для загрузки сканов паспорта',
            },
        ),
        migrations.CreateModel(
            name='TelegramOrder',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('created_at', models.DateTimeField()),
                ('passport_main_photo', models.ImageField(upload_to='')),
                ('passport_registry_photo', models.ImageField(upload_to='')),
                ('previous_passport_photo', models.ImageField(blank=True, null=True, upload_to='')),
                ('client_photo', models.ImageField(upload_to='')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
